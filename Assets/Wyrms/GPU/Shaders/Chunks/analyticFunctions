

float intersectBox(vec3 org, vec3 dir, vec3 size, out float far)
{
  // compute intersection of ray with all six bbox planes
  float3 invR = 1.0 / dir;
  float3 tbot = invR * (-0.5*size - org);
  float3 ttop = invR * (0.5*size - org);
  
  // re-order intersections to find smallest and largest on each axis
  float3 tmin = min (ttop, tbot);
  float3 tmax = max (ttop, tbot);
  
  // find the largest tmin and the smallest tmax
  float2 t0 = max (tmin.xx, tmin.yz);
  float near;
  near = max (t0.x, t0.y);
  t0 = min (tmax.xx, tmax.yz);
  far = min (t0.x, t0.y);

  // check for hit
  return near < far && far > 0.0 ? near : INF;
}